/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.abring.welpentest.CodingTrain;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Stroke;

/**
 *
 * @author Bring
 */
public class Blob extends java.awt.Rectangle{

    public final int MAX_LIFESPAN = 250;
    
    private final Stroke stroke = new BasicStroke(4, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0, new float[] { 5, 2 }, 0);
    
    private Color color = Color.MAGENTA;
    
    private int id;
    private int lifespan = MAX_LIFESPAN;
    
    private boolean taken = false;
    
    /**
     *
     * @param id
     * @param p
     */
    public Blob (int id, Point p) {
        this.id = id;
        this.x = p.x;
        this.y = p.y;
        this.width = 1;
        this.height = 1;
    }
    
    /**
     *
     * @param g2
     */
    public void paint(Graphics2D g2) {
        g2.setStroke(stroke);
        g2.setColor(getColor());
        g2.drawLine(x - 20, y, x + 20, y);
        g2.drawLine(x, y - 20, x, y + 20);
    }
    
    /**
     *
     * @return
     */
    public int size() {
        return width * height;
    }
    
    /**
     *
     * @return
     */
    public Point center() {
        return new Point(x + width / 2, y + height / 2);
    }
    
    /**
     *
     * @param id
     * @param x
     * @param y
     */
    public Blob (int id, int x, int y) {
        this.id = id;
        this.x = x;
        this.y = y;
        this.width = 1;
        this.height = 1;
    }

    void become(Blob other) {
        x = other.x;
        y = other.y;
        width = other.width;
        height = other.height;
        id = other.id;
        lifespan = MAX_LIFESPAN;
    }
    
    /**
     *
     * @param p Punkt
     * @param d maximal Distanz
     * @return
     */
    public boolean nearBy(Point p, double d) {
        int cx = Math.max(Math.min(p.x, x + width), x);
        int cy = Math.max(Math.min(p.y, y + height), y);
        double ds = Math.hypot(cx - p.x, cy - p.y);
        return ds <= d;
    }
    /**
     *
     * @return
     */
    public boolean checkLifespan() {
        this.lifespan--;
        return this.lifespan > 0;
    }
        
    /**
     *
     */
    public void resetLifespan() {
        this.lifespan = this.MAX_LIFESPAN;
    }
    
    /**
     * @return the id
     */
    public int getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * @return the color
     */
    public Color getColor() {
        return color;
    }

    /**
     * @param color the color to set
     */
    public void setColor(Color color) {
        this.color = color;
    }

    /**
     * @return the taken
     */
    public boolean isTaken() {
        return taken;
    }

    /**
     * @param taken the taken to set
     */
    public void setTaken(boolean taken) {
        this.taken = taken;
    }
}
