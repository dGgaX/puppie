/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.abring.welpentest.gui.dialog;

import java.awt.Component;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Karima
 */
public class FileIO {
    private static final String FILE_ENDING = ".puppietest";
    private static final String FILE_NAME = "WelpenTest-Dateien";
    private static final String FILE_ALL_NAME = "Alle Dateien";
    
    private static final String FILE_NAMEING = FILE_NAME + " (*" + FILE_ENDING + ")";
    private static final String FILE_DIALOG_OPEN_NAME = FILE_NAME + " Ã¶ffnen";
    private static final String FILE_DIALOG_SAVE_NAME = FILE_NAME + " speichern";
    
    private static final FileFilter FILE_FILTER = new javax.swing.filechooser.FileFilter() {
        @Override
        public boolean accept(java.io.File f) {
            if (f.isDirectory())
                return true;
            return f.getName().toLowerCase().endsWith(FILE_ENDING);
        }
        @Override
        public String getDescription() {
            return FILE_NAMEING;
        }
    };
    private static final FileFilter ALL_FILTER = new javax.swing.filechooser.FileFilter() {
        @Override
        public boolean accept(java.io.File f) {
            return true;
        }
        @Override
        public String getDescription() {
            return FILE_ALL_NAME + " (*.*)";
        }
    };
    public static final File getOpenPuppieTestFile(Component frame, String workingDir) {
        JFileChooser chooser = new JFileChooser(workingDir);
        
        chooser.setDialogTitle(FILE_DIALOG_OPEN_NAME);
        chooser.addChoosableFileFilter(ALL_FILTER);
        chooser.setFileFilter(FILE_FILTER);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setMultiSelectionEnabled(false);
        if (chooser.showOpenDialog(frame) == JFileChooser.APPROVE_OPTION) { 
            File file = chooser.getSelectedFile();
            if (!file.exists()) {
                MSG.msgOpenAborted(frame);
                return null;
            }
            return file;
        } else {
            return null;
        }
    }
    
    public static final File getSavePuppieTestFile(Component frame, File fileName, String workingDir) {
        JFileChooser chooser = new JFileChooser(workingDir);
        chooser.setDialogTitle(FILE_DIALOG_SAVE_NAME);
        chooser.addChoosableFileFilter(ALL_FILTER);
        chooser.setFileFilter(FILE_FILTER);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setMultiSelectionEnabled(false);
        chooser.setSelectedFile(fileName);
        if (chooser.showSaveDialog(frame) == JFileChooser.APPROVE_OPTION) { 
            File file = chooser.getSelectedFile();
            if (!file.getName().endsWith(FILE_ENDING))
                file = new File(file.getAbsolutePath() + FILE_ENDING);
            
            if (file.exists())
                if (!MSG.msgOverwriteFile(frame, file.getName()))
                    return null;
            
            
            return file;
        } else {
            return null;
        }
    }
}
