/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.abring.welpentest.gui.component;

import de.abring.welpentest.gui.model.CPIComboBoxModel;
import de.abring.welpentest.input.druck.DruckEvent;
import de.abring.welpentest.input.druck.DruckListener;
import de.abring.welpentest.input.druck.SerialConnection;
import gnu.io.CommPortIdentifier;

/**
 *
 * @author Karima
 */
public class SerialMonitor extends javax.swing.JInternalFrame {

    SerialConnection sc;
    CPIComboBoxModel cpiModel = new CPIComboBoxModel();
    /**
     * Creates new form LDSFrame
     * @param sc
     */
    public SerialMonitor(SerialConnection sc) {
        this.sc = sc;
        initComponents();
        this.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/de/abring/welpentest/gui/images/Logo64.png")));
        this.jCbxPort.setModel(cpiModel);
        
        updatePorts();
        sc.addListener(new DruckListener() {
            @Override
            public void audioDetected(DruckEvent pvt) {
                if (pvt.getID() == DruckEvent.POINT) {
                    
                } else if (pvt.getID() == DruckEvent.STRING) {
                    if (pvt.getSource() instanceof String)
                        jTxtOutput.append("< " + (String) pvt.getSource() + "\n\r");
                        jTxtOutput.setCaretPosition(jTxtOutput.getDocument().getLength());
                }
            }
        });
    }

    private void updatePorts() {
        cpiModel.clear();
        for(CommPortIdentifier cpi : sc.getAvailableCommPorts()) {
            cpiModel.addElement(cpi.getName());
        }
        if (cpiModel.getSize() > 0) {
            cpiModel.setSelectedItem(cpiModel.getElementAt(0));
            initConnection();
        } else {
            cpiModel.setSelectedItem(null);
        }
        
    }
    
    private void initConnection() {
        sc.disconnect();
        sc.selectCommPort(cpiModel.getSelectedItemIndex());
        sc.connect();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCbxPort = new javax.swing.JComboBox<>();
        jSclPne = new javax.swing.JScrollPane();
        jTxtOutput = new javax.swing.JTextArea();
        jTxTInput = new javax.swing.JTextField();
        jBtnUpdate = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setResizable(true);
        setTitle("Serial Monitor");

        jCbxPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxPortActionPerformed(evt);
            }
        });

        jTxtOutput.setColumns(20);
        jTxtOutput.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTxtOutput.setRows(5);
        jSclPne.setViewportView(jTxtOutput);

        jTxTInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxTInputActionPerformed(evt);
            }
        });

        jBtnUpdate.setText("update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSclPne, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(jTxTInput, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jCbxPort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnUpdate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbxPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSclPne, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxTInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCbxPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxPortActionPerformed
        initConnection();
    }//GEN-LAST:event_jCbxPortActionPerformed

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
        updatePorts();
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jTxTInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxTInputActionPerformed
        this.jTxtOutput.append("> " + this.jTxTInput.getText() + "\n\r");
        sc.writeToCommPort(this.jTxTInput.getText());
        this.jTxTInput.setText("");
    }//GEN-LAST:event_jTxTInputActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JComboBox<String> jCbxPort;
    private javax.swing.JScrollPane jSclPne;
    private javax.swing.JTextField jTxTInput;
    private javax.swing.JTextArea jTxtOutput;
    // End of variables declaration//GEN-END:variables
}
