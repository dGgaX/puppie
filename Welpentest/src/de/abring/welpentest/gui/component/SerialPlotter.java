/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.abring.welpentest.gui.component;

import de.abring.welpentest.gui.model.CPIComboBoxModel;
import de.abring.welpentest.input.druck.DruckEvent;
import de.abring.welpentest.input.druck.DruckListener;
import de.abring.welpentest.input.druck.SerialConnection;
import gnu.io.CommPortIdentifier;
import java.awt.Point;

/**
 *
 * @author Karima
 */
public class SerialPlotter extends javax.swing.JInternalFrame {

    SerialConnection sc;
    CPIComboBoxModel cpiModel = new CPIComboBoxModel();
    /**
     * Creates new form LDSFrame
     * @param sc
     */
    public SerialPlotter(SerialConnection sc) {
        this.sc = sc;
        initComponents();
        this.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/de/abring/welpentest/gui/images/Logo64.png")));
        this.jCbxPort.setModel(cpiModel);
        
        updatePorts();
        sc.addListener(new DruckListener() {
            @Override
            public void audioDetected(DruckEvent pvt) {
                if (pvt.getID() == DruckEvent.POINT) {
                    if (pvt.getSource() instanceof Point) {
                        Point newPoint = (Point) pvt.getSource();
                        graphPanel.addPoint(newPoint);
                        jLblMax.setText("MaximalWert: ~" + String.valueOf(graphPanel.getDataMaxValue()) + " kPa. Entspricht ~" + String.valueOf(graphPanel.getDataMaxValue() / 1000.0f * 175 * 98.1f) + " g auf 175 mmÂ² ( = ein dicker Finger ;) )");
                        jLblMax.updateUI();
                    }
                } else if (pvt.getID() == DruckEvent.STRING) {
                    
                }
            }
        });
    }

    private void updatePorts() {
        cpiModel.clear();
        for(CommPortIdentifier cpi : sc.getAvailableCommPorts()) {
            cpiModel.addElement(cpi.getName());
        }
        if (cpiModel.getSize() > 0) {
            cpiModel.setSelectedItem(cpiModel.getElementAt(0));
            initConnection();
        } else {
            cpiModel.setSelectedItem(null);
        }
        
    }
    
    private void initConnection() {
        sc.disconnect();
        sc.selectCommPort(cpiModel.getSelectedItemIndex());
        sc.connect();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCbxPort = new javax.swing.JComboBox<>();
        jBtnUpdate = new javax.swing.JButton();
        graphPanel = new de.abring.welpentest.gui.panes.GraphPanel();
        jBtnStop = new javax.swing.JButton();
        jBtnStart = new javax.swing.JButton();
        jSpnRecTime = new javax.swing.JSpinner();
        jLblMax = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setResizable(true);
        setTitle("Serial Plotter");

        jCbxPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxPortActionPerformed(evt);
            }
        });

        jBtnUpdate.setText("update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        jBtnStop.setText("Stop");
        jBtnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStopActionPerformed(evt);
            }
        });

        jBtnStart.setText("Start");
        jBtnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStartActionPerformed(evt);
            }
        });

        jSpnRecTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jSpnRecTime.setModel(new javax.swing.SpinnerNumberModel(120, 0, 600, 1));
        jSpnRecTime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnRecTimeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCbxPort, 0, 610, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnUpdate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLblMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpnRecTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnStop)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbxPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnStop)
                        .addComponent(jBtnStart))
                    .addComponent(jSpnRecTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCbxPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxPortActionPerformed
        initConnection();
    }//GEN-LAST:event_jCbxPortActionPerformed

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
        updatePorts();
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jBtnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStartActionPerformed
        int duration = (int) jSpnRecTime.getValue();
        
        this.graphPanel.clear();
        graphPanel.setMaxY(100);
        graphPanel.setMaxX(duration * 1000);
        graphPanel.updateUI();
    
        
        sc.writeToCommPort("start");
    }//GEN-LAST:event_jBtnStartActionPerformed

    private void jBtnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStopActionPerformed
        sc.writeToCommPort("stop");
    }//GEN-LAST:event_jBtnStopActionPerformed

    private void jSpnRecTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnRecTimeStateChanged
        System.out.println((int)jSpnRecTime.getValue());
    }//GEN-LAST:event_jSpnRecTimeStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.abring.welpentest.gui.panes.GraphPanel graphPanel;
    private javax.swing.JButton jBtnStart;
    private javax.swing.JButton jBtnStop;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JComboBox<String> jCbxPort;
    private javax.swing.JLabel jLblMax;
    private javax.swing.JSpinner jSpnRecTime;
    // End of variables declaration//GEN-END:variables
}
